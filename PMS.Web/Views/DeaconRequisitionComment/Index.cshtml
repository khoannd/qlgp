@model PMS.DataAccess.Models.DeaconRequisitionSession
@{
    ViewBag.Title = "Index";
}


<div ng-controller="DeaconRequisitionCommentController">
    <div class="col-xs-12">
        <div class="widget-box transparent ui-sortable-handle">
            <div class="space-4"></div>
            <div class="widget-header">
                <h3 class="widget-title lighter">Danh sách các ứng viên xin chức phó tế đợt @Model.SessionName năm @Model.Year.Year</h3>
            </div>
            <div class="space-6"></div>
            <div class="widget-body">
                <div class="space-6"></div>
                <div class="table-responsive">
                    <table id="deaconRequisitionSessionTable" class="table table-condensed table-hover">
                        <thead>
                            <tr>
                                <th>Tên thánh</th>
                                <th>Họ tên</th>
                                <th>Ngày sinh</th>
                                <th>Số điện thoại</th>
                                <th>Email</th>
                                <th>Tình trạng</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="vd in deaconSession.VocationDeaconRequisitionSessions">
                                <td>{{vd.Vocation.Parishioner.ChristianName}}</td>
                                <td>{{vd.Vocation.Parishioner.Name}}</td>
                                <td>{{vd.Vocation.Parishioner.BirthDate | date:'dd/MM/yyyy'}}</td>
                                <td>{{vd.Vocation.Parishioner.Phone}} {{vd.Vocation.Parishioner.Phone && vd.Vocation.Parishioner.MobilePhone ? '-' : ''}} {{vd.Vocation.Parishioner.MobilePhone}}</td>
                                <td>{{vd.Vocation.Parishioner.Email}}</td>
                                <td>{{vd.Status == 0 ? 'Đang xử lý' : vd.Status == 1 ? 'Đã duyệt' : 'Không duyệt'}}</td>
                                <td><button class="btn btn-minier btn-primary" ng-click="loadComments(vd)"><i class="ace-icon fa fa-comment"></i>Nhận xét</button></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div bs-modal bs-modal-show="showCommentForm" class="modal fade" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
        <style>
            .error {
                color: #a94442;
            }

            .typeahead-search-box ul.dropdown-menu li:nth-child(2n+1) {
                background: #fff;
            }

            .typeahead-search-box ul.dropdown-menu li:nth-child(2n) {
                background: #f5f5f5;
            }

            .typeahead-wrapper {
                position: relative;
            }

                .typeahead-wrapper ul.dropdown-menu {
                    min-width: 100%;
                }

            tr.deleted {
                text-decoration: line-through;
            }

            textarea {
                resize: none;
            }
        </style>
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="widget-box transparent">
                    <div class="widget-header center">
                        <div class="col-xs-12">
                            <h4 class="widget-title lighter">Nhận xét ứng viên {{deaconRequisition.Vocation.Parishioner.ChristianName}} {{deaconRequisition.Vocation.Parishioner.Name}}</h4>
                        </div>
                    </div>

                    <div class="widget-body">
                        <div class="space-10"></div>
                        <div class="col-sm-12">
                            <div class="row">
                                <div class="col-sm-12 text-center">
                                    <b>Ngày sinh:</b> {{deaconRequisition.Vocation.Parishioner.BirthDate | date: 'dd/MM/yyyy'}}
                                    <span style="padding: 0 20px"></span>
                                    <b>Số điện thoại:</b> {{deaconRequisition.Vocation.Parishioner.Phone}} {{deaconRequisition.Vocation.Parishioner.Phone && deaconRequisition.Vocation.Parishioner.MobilePhone ? '-' : ''}} {{deaconRequisition.Vocation.Parishioner.MobilePhone}}
                                </div>
                            </div>
                            <div class="space-10"></div>
                            <div ng-if="isEdit == null" class="row">
                                <div class="col-sm-12 text-right">
                                    <a class="btn btn-primary" ng-click="addComment()"><i class="fa fa-comment"></i>Thêm nhận xét</a>
                                </div>
                            </div>
                            <div ng-if="isEdit != null" class="row">
                                <div class="col-sm-12 text-center">
                                    <h4 ng-if="!isEdit">Thêm nhận xét</h4>
                                    <h4 ng-if="isEdit">Sửa nhận xét</h4>
                                </div>
                                <div class="form-horizontal">
                                    <div class="col-sm-5">
                                        <div class="form-group">
                                            <label class="col-sm-4 control-label">Loại</label>
                                            <div class="col-sm-8">
                                                <select class="form-control" ng-model="newComment.Type" ng-change="commentTypeChanged()">
                                                    <option value="0">Linh mục</option>
                                                    <option value="1">Giáo dân</option>
                                                    <option value="2">Giáo xứ</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-sm-4 control-label">Người nhận xét</label>
                                            <div class="col-sm-8 typeahead-search-box">
                                                <div class="typeahead-wrapper">
                                                    <input typeahead-wait-ms="500" typeahead-on-select="changeCommentator()" type="text" ng-model="newComment.Commentator" placeholder="" typeahead-editable="false" uib-typeahead="c as c.Display for c in searchCommentator($viewValue)" typeahead-loading="loadingCommentator" typeahead-no-results="noCommentatorFound" class="form-control">
                                                    <i ng-show="loadingCommentator" class="glyphicon glyphicon-refresh"></i>
                                                    <div ng-show="noCommentatorFound">
                                                        <i class="glyphicon glyphicon-remove"></i> Không tìm thấy dữ liệu
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-sm-4 control-label">Ngày nhận xét</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control" ng-model="newComment.CreatedAt" datepicker datepicker-options="datepickerOptions">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-7">
                                        <div class="form-group">
                                            <div class="col-sm-12">
                                                <textarea ng-model="newComment.Comment" rows="4" class="form-control" placeholder="Nhận xét"></textarea>
                                            </div>
                                            <div class="col-sm-6" style="padding-right: 0">
                                                <a ng-click="saveComment()" ng-if="isEdit == false" style="width: 100%" ng-class="{'disabled': isSaving}" class="btn btn-success">Lưu</a>
                                                <a ng-click="saveComment()" ng-if="isEdit == true" style="width: 100%" ng-class="{'disabled': isSaving}" class="btn btn-success">Cập nhật</a>
                                            </div>
                                            <div class="col-sm-6" style="padding-left: 0">
                                                <a ng-click="cancelAddEditComment()" style="width: 100%" class="btn btn-grey">Hủy</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="space-10"></div>
                            <div class="row">
                                <div class="col-sm-12 text-center">
                                    <h4>Các nhận xét</h4>
                                </div>
                                <div class="table-responsive">
                                    <table class="table table-bordered table-hover">
                                        <thead>
                                            <tr>
                                                <th class="text-center">Loại</th>
                                                <th class="text-center">Người nhận xét</th>
                                                <th class="text-center">Ngày nhận xét</th>
                                                <th class="text-center">Nội dung</th>
                                                <th class="text-center"></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr ng-repeat="c in deaconRequisition.Comments">
                                                <td>{{c.Type == '0' ? 'Linh mục' : c.Type == '1' ? 'Giáo dân' : 'Giáo xứ'}}</td>
                                                <td ng-if="c.Type == '0'">{{c.Priest.ChristianName}} {{c.Priest.Name}}<br />{{c.Priest.Phone}}</td>
                                                <td ng-if="c.Type == '1'">{{c.Parishioner.ChristianName}} {{c.Parishioner.Name}}<br />{{c.Parishioner.MobilePhone}} {{c.Parishioner.MobilePhone && c.Parishioner.Phone ? '-' :''}} {{c.Parishioner.Phone}}</td>
                                                <td ng-if="c.Type == '2'">{{c.Parish.Name}}<br />{{c.Parish.Address}}</td>
                                                <td>{{c.CreatedAt | date: 'dd/MM/yyyy'}}</td>
                                                <td>{{c.Comment}}</td>
                                                <td>
                                                    <button class="btn btn-minier btn-primary" ng-click="editComment(c)"><i class="ace-icon fa fa-pencil"></i>Sửa</button>
                                                    <button ng-class="{'disabled': c.Deleting}" class="btn btn-minier btn-danger" ng-click="deleteComment(c, $index)"><i class="ace-icon fa fa-trash-o"></i>Xóa</button>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="col-xs-12 col-sm-12">
                                    <div class="align-right">
                                        <div class="space-6"></div>
                                        <button ng-click="showCommentForm = false" class="btn btn-grey" data-toggle="modal">
                                            <i class="ace-icon fa fa-times"></i> Đóng
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="space-6"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/Scripts/angular.min.js"></script>
    <script src="~/Scripts/ui-bootstrap-tpls-1.3.1.min.js"></script>
    <script type="text/javascript">
        function getDate(str) {
            if (!str) {
                return null;
            }
            var date = eval('new ' + str.replace(/\//g, ''));
            return date;
        }

        var myApp = angular.module('myApp', ['ui.bootstrap']);

        myApp.directive('datepicker', ['$filter', function ($filter) {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function (scope, element, attrs, ngModel) {
                    var baseOptions = {
                        autoclose: true,
                        todayHighlight: true,
                        forceParse: false,
                        format: "dd/MM/yyyy"
                    }
                    var options = attrs.datepickerOptions;
                    if (options) {
                        options = scope.$eval(options);
                        for (var key in options) {
                            baseOptions[key] = options[key];
                        }
                    }

                    if (ngModel) {
                        ngModel.$parsers.unshift(function (data) {
                            //convert data from view format to model format
                            data = $(element).datepicker('getDate');
                            return data; //converted
                        });

                        ngModel.$render = function () {
                            $(element).datepicker('setDate', new Date(ngModel.$viewValue));
                        };
                    }

                    element.datepicker(baseOptions)
                        .on('changeDate', function () {
                            ngModel.$viewValue = element.datepicker('getDate');
                            ngModel.$modelValue = ngModel.$viewValue;
                            ngModel.$commitViewValue();
                        });
                }
            }
        }])

        myApp.directive('bsModal', function () {
            return {
                restrict: 'A',
                scope: {
                    bsModalShow: '='
                },
                link: function (scope, element, attr) {
                    scope.$watch(function () {
                        return scope.bsModalShow;
                    }, function (value, old) {
                        if (value != old && value == true) {
                            element.modal('show');
                        } else if (value != old && value == false) {
                            element.modal('hide');
                        }
                    })

                    element.on('hidden.bs.modal', function (e) {
                        if (scope.bsModalShow) {
                            scope.$evalAsync(function () {
                                scope.bsModalShow = false;
                            })
                        }
                    })

                    element.on('shown.bs.modal', function (e) {
                        if (!scope.bsModalShow) {
                            scope.$evalAsync(function () {
                                scope.bsModalShow = true;
                            })
                        }
                    })
                }
            }
        })

        myApp.controller('DeaconRequisitionCommentController', ['$scope', '$http', '$filter', function ($scope, $http, $filter) {
            $scope.datepickerOptions = {
                format: 'dd/mm/yyyy'
            }

            $scope.deaconSession = {};
            $scope.load = function () {
                $http.get('/DeaconRequisition/LoadDeaconRequisitionSessionById/@Model.Id')
                    .success(function (data) {
                        data = data.result;
                        data.DeaconOrdinationMassTime = getDate(data.DeaconOrdinationMassTime);
                        data.DeadlineForParish = getDate(data.DeadlineForParish);
                        data.DeadlineForPriest = getDate(data.DeadlineForPriest);
                        data.Year = getDate(data.Year);

                        data.VocationDeaconRequisitionSessions.forEach(function (vd) {
                            vd.Vocation.Parishioner.BirthDate = getDate(vd.Vocation.Parishioner.BirthDate);
                            vd.Vocation.Parishioner.Display = vd.Vocation.Parishioner.ChristianName + ' ' + vd.Vocation.Parishioner.Name;
                        })

                        $scope.deaconSession = data;
                    })
            }

            $scope.load();

            $scope.deaconRequisition = {};
            $scope.showCommentForm = false;
            $scope.loadComments = function (vocationDeaconRequisition) {
                $scope.deaconRequisition = angular.copy(vocationDeaconRequisition);
                $scope.showCommentForm = true;
                loadComments();
            }

            function loadComments() {
                $http.get('/DeaconRequisitionComment/GetCommentsOfVocationDeaconRequisition/' + $scope.deaconRequisition.Id)
                   .success(function (response) {
                       $scope.deaconRequisition.Comments = response;
                       $scope.deaconRequisition.Comments.forEach(function (c) {
                           c.CreatedAt = getDate(c.CreatedAt);
                           c.Type = c.Priest != null ? '0' : c.Parishioner != null ? '1' : '2'; //0 is Priest comment, 1 is Parishioner comment, 2 is Parish comment
                           if (c.Type == '0') {
                               c.Priest.BirthDate = c.Priest.BirthDate != null ? getDate(c.Priest.BirthDate) : null;
                           } else if (c.Type == '1') {
                               c.Parishioner.BirthDate = c.Parishioner.BirthDate != null ? getDate(c.Parishioner.BirthDate) : null;
                           }
                       })
                   })
            }

            $scope.newComment = {
                Comment: '',
                CreatedAt: new Date(),
                Commentator: null,
                Type: '0'
            };

            $scope.isEdit = null;

            $scope.addComment = function () {
                $scope.newComment = {
                    Comment: '',
                    CreatedAt: new Date(),
                    Parish: null,
                    Parishioner: null,
                    Priest: null,
                    Type: '0'
                };
                $scope.isEdit = false;
            }

            $scope.editComment = function (comment) {
                $scope.newComment = {
                    Id: comment.Id,
                    Comment: comment.Comment,
                    CreatedAt: comment.CreatedAt,
                    Parish: null,
                    Parishioner: null,
                    Priest: null,
                    Type: comment.Type
                }
                switch (comment.Type) {
                    case '0':
                        $scope.newComment.Commentator = angular.copy(comment.Priest);
                        let phone = comment.Priest.Phone ? ' - ' + comment.Priest.Phone : '';
                        let birthDate = comment.Priest.BirthDate ? ' - ' + $filter('date')(comment.Priest.BirthDate, 'dd/MM/yyyy') : '';
                        $scope.newComment.Commentator.Display = $scope.newComment.Commentator.ChristianName + ' ' + $scope.newComment.Commentator.Name + phone + birthDate;
                        $scope.newComment.Commentator.Type = comment.Type;
                        break;
                    case '1':
                        break;
                    case '2':
                        break;
                    default:
                        break;
                }
                $scope.isEdit = true;
            }

            $scope.cancelAddEditComment = function () {
                $scope.isEdit = null;
            }

            $scope.searchCommentatorServices = {
                '0': '/Priest/SearchPriestForCommentDeaconRequisition',
                '1': '/Parishioner/SearchParishionerByKeyword',
                '2': '/Parish/SearchParishByKeyword'
            }

            $scope.commentTypeChanged = function () {
                if ($scope.newComment.Commentator && $scope.newComment.Type != $scope.newComment.Commentator.Type) {
                    $scope.newComment.Commentator = null;
                }
            }

            $scope.searchCommentator = function (value) {
                var type = $scope.newComment.Type;
                return $http.get($scope.searchCommentatorServices[type], {
                    params: {
                        keyword: value,
                        start: 0,
                        length: 20
                    }
                }).then(function (response) {
                    var data = response.data;
                    switch (type) {
                        case '0':
                            data.forEach(function (priest) {
                                let phone = priest.Phone ? ' - ' + priest.Phone : '';
                                priest.BirthDate = priest.BirthDate != null ? getDate(priest.BirthDate) : null;
                                let birthDate = priest.BirthDate ? ' - ' + $filter('date')(priest.BirthDate, 'dd/MM/yyyy') : '';
                                priest.Display = priest.ChristianName + ' ' + priest.Name + phone + birthDate;
                                priest.Type = '0';
                            })
                            break;
                        case '1':
                            data.forEach(function (parishioner) {
                                let phone = parishioner.Phone ? ' - ' + parishioner.Phone : '';
                                parishioner.BirthDate = parishioner.BirthDate != null ? getDate(parishioner.BirthDate) : null;
                                let birthDate = parishioner.BirthDate ? ' - ' + $filter('date')(parishioner.BirthDate, 'dd/MM/yyyy') : '';
                                parishioner.Display = parishioner.ChristianName + ' ' + parishioner.Name + phone + birthDate;
                                parishioner.Type = '1';
                            })
                            break;
                        case '2':
                            data.forEach(function (parish) {
                                parish.Display = parish.Name + ' - ' + parish.Address;
                                parish.Type = '2';
                            })
                            break;
                        default:
                            break;
                    }
                    return data;
                })
            }

            $scope.deleteComment = function (comment, index) {
                if (comment.Deleting) {
                    return;
                }

                comment.Deleting = true;

                bootbox.dialog({
                    closeButton: false,
                    message: "Bạn có chắc muốn xóa nhận xét này không?",
                    title: "Xác nhận",
                    buttons: {
                        danger: {
                            label: " Xóa",
                            className: "ace-icon fa fa-trash-o btn-danger",
                            callback: function () {
                                $http.post('/DeaconRequisitionComment/DeleteComment/' + comment.Id)
                                    .success(function (response) {
                                        if (response.Error) {
                                            if (response.Errors) {
                                                response.Errors.forEach(function (error) {
                                                    showMessage(error, 0, 6000);
                                                })
                                            } else {
                                                showMessage('Xóa nhận xét không thành công', 0, 6000);
                                            }
                                            comment.Deleting = false;
                                        } else {
                                            showMessage('Xóa nhận xét thành công', 1, 6000);
                                            $scope.deaconRequisition.Comments.splice(index, 1);
                                        }
                                    }).error(function (error, status) {
                                        showMessage('[' + status + '] Xóa nhận xét không thành công', 0, 6000);
                                        comment.Deleting = false;
                                    })
                                }
                        },
                        main: {
                            label: " Đóng",
                            className: "ace-icon fa fa-times btn-default",
                            callback: function () {
                                comment.Deleting = false;
                                $scope.$apply();
                            }
                        }
                    }
                });


            }

            $scope.isSaving = false;

            $scope.saveComment = function () {
                if ($scope.isSaving) {
                    return;
                }

                $scope.isSaving = true;
                if (!validateSaveComment()) {
                    $scope.isSaving = false;
                    return;
                }

                var model = {
                    Id: $scope.newComment.Id,
                    Comment: $scope.newComment.Comment,
                    CreatedAt: $scope.newComment.CreatedAt,
                    VocationDeaconRequisitionId: $scope.deaconRequisition.Id
                };

                switch ($scope.newComment.Type) {
                    case '0':
                        model.PriestId = $scope.newComment.Commentator.Id;
                        break;
                    case '1':
                        model.ParishionerId = $scope.newComment.Commentator.Id;
                        break;
                    case '2':
                        model.ParishId = $scope.newComment.Commentator.Id;
                        break;
                    default:
                        break;
                }

                $http.post('/DeaconRequisitionComment/SaveComment', model)
                    .success(function (response) {
                        if (response.Error) {
                            if (response.Errors) {
                                response.Errors.forEach(function (error) {
                                    showMessage(error, 0, 6000);
                                })
                            } else {
                                showMessage('Lưu nhận xét không thành công', 0, 6000);
                            }
                        } else {
                            showMessage('Lưu nhận xét thành công', 1, 6000);
                            $scope.isEdit = null;
                            $scope.newComment = {};
                            loadComments();
                        }
                        $scope.isSaving = false;
                    }).error(function (error, status) {
                        showMessage('[' + status + '] Lưu nhận xét không thành công', 0, 6000);
                        $scope.isSaving = false;
                    })
            }

            function validateSaveComment() {
                var valid = true;

                if (!$scope.newComment.Comment || $scope.newComment.Comment.trim().length == 0) {
                    showMessage('Vui lòng nhập vào nhận xét', 0);
                    valid = false;
                }

                if ($scope.newComment.Commentator && $scope.newComment.Commentator.Type != $scope.newComment.Type) {
                    $scope.newComment.Commentator = null;
                }

                if (!$scope.newComment.Commentator || !$scope.newComment.Commentator.Id) {
                    showMessage('Vui lòng nhập người nhận xét', 0);
                    valid = false;
                }

                if (!$scope.newComment.CreatedAt || $scope.newComment.CreatedAt.constructor != Date) {
                    showMessage('Vui lòng chọn ngày nhận xét', 0);
                    valid = false;
                }

                return valid;
            }

        }]);

        //bootstrap angular app
        angular.element(document).ready(function () {
            angular.bootstrap(document, ['myApp']);
        });
    </script>
}
