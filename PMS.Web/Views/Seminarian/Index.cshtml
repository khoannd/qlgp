@{
    ViewBag.Title = "Index";
}
<div ng-controller="SeminarianController">
    <div class="col-xs-12">
        <div class="widget-box transparent ui-sortable-handle">
            <div class="space-4"></div>
            <div class="widget-header">
                <h3 class="widget-title lighter">Danh sách chủng sinh</h3>
            </div>
            <div class="space-6"></div>
            <div class="widget-body">
                <button id="btnCreateSeminarian" class="btn btn-success" data-toggle="modal">
                    <i class="ace-icon fa fa-plus"></i> Thêm chủng sinh
                </button>
                <div class="space-6"></div>
                <table id="seminarianTable" class="table table-hover">
                    <thead>
                        <tr>
                            <th></th>
                            <th>
                                <label class="position-relative">
                                    <input type="checkbox" class="ace" />
                                    <span class="lbl"></span>
                                </label>
                            </th>
                            <th>Tên thánh</th>
                            <th>Họ tên</th>
                            <th>Ngày sinh</th>
                            <th>Niên khóa</th>
                            <th>Số điện thoại</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
    <!--Seminary Year Modal-->
    <div id="createSeminarianModal" class="modal fade" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
        <style>
            .error {
                color: #a94442;
            }

            .typeahead-search-box ul.dropdown-menu li:nth-child(2n+1) {
                background: #fff;
            }

            .typeahead-search-box ul.dropdown-menu li:nth-child(2n) {
                background: #f5f5f5;
            }

            .typeahead-wrapper {
                position: relative;
            }

                .typeahead-wrapper ul.dropdown-menu {
                    width: 100%;
                }
        </style>
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="widget-box transparent">
                    <div class="widget-header center">
                        <div class="col-xs-12">
                            <h4 class="widget-title lighter">{{isEdit ? 'Chỉnh sửa chủng sinh' : 'Thêm chủng sinh'}}</h4>
                            <input type="hidden" ng-model="seminarian.Parishioner.Id" id="seminarianId" />
                        </div>
                    </div>
                    <div class="widget-body">
                        <div class="space-10"></div>
                        <div class="col-sm-offset-1 col-sm-10">
                            <div class="row">
                                <div class="form-group">
                                    <label class="col-sm-3 control-label no-padding-right">Chủng sinh&nbsp;(<span style="color: red">*</span>)</label>
                                    <div class="col-sm-9 typeahead-search-box">
                                        <div class="typeahead-wrapper">
                                            <input typeahead-wait-ms="500" typeahead-template-url="searchParishionerTemplate.html" type="text" ng-model="seminarian.Parishioner" placeholder="" typeahead-editable="false" uib-typeahead="p as p.Display for p in getParishioners($viewValue)" typeahead-loading="loadingParishioner" typeahead-no-results="noParishionerFound" class="form-control">
                                            <i ng-show="loadingLocations" class="glyphicon glyphicon-refresh"></i>
                                            <div ng-show="noResults">
                                                <i class="glyphicon glyphicon-remove"></i> Không tìm thấy dữ liệu
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="space-10"></div>
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="table-responsive">
                                        <table class="table table-condensed table-striped">
                                            <tbody>
                                                <tr>
                                                    <td>Ngày sinh</td>
                                                    <td>{{seminarian.Parishioner.BirthDate | date: 'dd/MM/yyyy'}}</td>
                                                </tr>
                                                <tr>
                                                    <td>Số điện thoại</td>
                                                    <td>{{seminarian.Parishioner.Phone}} {{seminarian.Parishioner.Phone && seminarian.Parishioner.MobilePhone ? '-' : ''}} {{seminarian.Parishioner.MobilePhone}}</td>
                                                </tr>
                                                <tr>
                                                    <td>Email</td>
                                                    <td>{{seminarian.Parishioner.Email}}</td>
                                                </tr>
                                                <tr>
                                                    <td>Địa chỉ</td>
                                                    <td>{{seminarian.Parishioner.Address}}</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="space-10"></div>
                            <div class="row">
                                <div class="col-sm-12 text-center"><label class="control-label"><b>Niên khóa đã học</b></label></div>
                                <div class="col-sm-12">
                                    <div class="table-responsive">
                                        <table class="table table-bordered table-striped">
                                            <thead>
                                                <tr>
                                                    <th>Chủng viện</th>
                                                    <th>Mã niên khóa</th>
                                                    <th>Thời gian</th>
                                                    <th>Thực tế</th>
                                                    <th>Trạng thái</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr ng-repeat="vsy in seminarian.VocationSeminaryYears">
                                                    <td>{{vsy.SeminaryYear.SeminaryName}}</td>
                                                    <td>{{vsy.SeminaryYear.SeminaryYearCode}}</td>
                                                    <td>{{vsy.SeminaryYear.StartAt | date:'yyyy'}} - {{vsy.SeminaryYear.EndAt | date:'yyyy'}}</td>
                                                    <td>{{vsy.ActualStart | date:'yyyy'}} - {{vsy.ActualEnd | date:'yyyy'}}</td>
                                                    <td>{{vsy.Status == 0 ? 'Chưa tốt nghiệp' : 'Đã tốt nghiệp'}}</td>
                                                    <td>
                                                        <button class="btn btn-minier btn-primary"><i class="ace-icon fa fa-pencil"></i>Sửa</button>
                                                        <button class="btn btn-minier btn-danger"><i class="ace-icon fa fa-trash-o"></i>Xóa</button>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="space-10"></div>
                            <div class="row">
                                <div class="form-group">
                                    <label class="col-sm-3 control-label no-padding-right">Thêm niên khóa&nbsp;(<span style="color: red">*</span>)</label>
                                    <div class="col-sm-9 typeahead-search-box">
                                        <div class="typeahead-wrapper">
                                            <input type="text" typeahead-on-select="changeSeminaryYear(seminarian.NewSeminaryYear)" ng-model="seminarian.NewSeminaryYear.SeminaryYear" placeholder="" typeahead-min-length="0" typeahead-editable="false" uib-typeahead="s as s.Display for s in seminaryYears | filter: $viewValue" typeahead-no-results="noSeminaryYearFound" class="form-control">
                                            <div ng-show="noResults">
                                                <i class="glyphicon glyphicon-remove"></i> Không tìm thấy dữ liệu
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="space-4"></div>
                            <div class="row" ng-if="seminarian.NewSeminaryYear.SeminaryYear.Id">
                                <label class="col-sm-3 control-label" no-padding-right><i>Thông tin học tập</i></label>
                                <div class="col-sm-9">
                                    <div class="row">
                                        <div class="form-group">
                                            <label class="col-sm-3 control-label">
                                                Năm bắt đầu (thực tế)
                                            </label>
                                            <div class="col-sm-3">
                                                <input type="text" class="form-control" datepicker datepicker-options="seminaryYearDatePickerOptions" ng-model="seminarian.NewSeminaryYear.ActualStart" />
                                                <div class="error" ng-if="actualStartError">{{actualStartError}}</div>
                                            </div>
                                            <label class="col-sm-3 control-label">
                                                Năm kết thúc (thực tế)
                                            </label>
                                            <div class="col-sm-3">
                                                <input type="text" class="form-control" datepicker datepicker-options="seminaryYearDatePickerOptions" ng-model="seminarian.NewSeminaryYear.ActualEnd" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="space-4"></div>
                                    <div class="row">
                                        <div class="form-group">
                                            <label class="col-sm-3 control-label">
                                                Tình trạng
                                            </label>
                                            <div class="col-sm-6">
                                                <select class="form-control" ng-model="seminarian.NewSeminaryYear.Status">
                                                    <option value="0">Chưa tốt nghiệp</option>
                                                    <option value="1">Tốt nghiệp</option>
                                                </select>
                                            </div>
                                            <div class="col-sm-3">
                                                <a ng-click="addNewSeminaryYear()" class="btn btn-success" style="padding: 2px 12px; width: 100%;">Thêm</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="space-10"></div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="col-xs-12 col-sm-12">
                                    <div class="align-right">
                                        <div class="space-6"></div>
                                        <button ng-if="!isEdit" ng-click="createSeminarian()" class="btn btn-primary" data-toggle="modal">
                                            <i class="ace-icon fa fa-save"></i> Lưu
                                        </button>
                                        <button ng-if="isEdit" ng-click="updateSeminarian()" class="btn btn-primary" data-toggle="modal">
                                            <i class="ace-icon fa fa-save"></i> Cập Nhật
                                        </button>
                                        <button ng-click="closeSeminarianModal()" class="btn btn-grey" data-toggle="modal">
                                            <i class="ace-icon fa fa-times"></i> Đóng
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="space-6"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script type="text/ng-template" id="searchParishionerTemplate.html">
        <a>
            <div class="table-responsive">
                <table class="table" style="border:none">
                    <tbody>
                        <tr>
                            <td width="120px" style="border:none">Tên</td>
                            <td style="border:none">{{match.model.ChristianName}} {{match.model.Name}}</td>
                        </tr>
                        <tr ng-if="match.model.BirthDate || match.model.BirthDate">
                            <td>Ngày sinh</td>
                            <td>{{match.model.BirthDate | date: 'dd/MM/yyyy'}}</td>
                        </tr>
                        <tr ng-if="match.model.Phone || match.model.MobilePhone">
                            <td>Số điện thoại</td>
                            <td>{{match.model.Phone}} {{match.model.Phone && match.model.MobilePhone ? '-' : ''}} {{match.model.MobilePhone}}</td>
                        </tr>
                        <tr ng-if="match.model.Email">
                            <td>Email</td>
                            <td>{{match.model.Email}}</td>
                        </tr>
                        <tr ng-if="match.model.Address">
                            <td>Địa chỉ</td>
                            <td>{{match.model.Address}}</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </a>
    </script>
</div>
<!--End Seminary Year Modal-->
<script>
    InitDatatable();
    function InitDatatable() {
        $("#seminarianTable").dataTable({
            "bRetrieve": true,
            "bServerSide": true,
            "bScrollCollapse": true,
            "sAjaxSource": "/Seminarian/LoadSeminarianDatatable",
            //"bProcessing": true,
            "oLanguage": {
                "sSearch": "Từ khóa",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "sInfoEmpty": "",
                "oPaginate": {
                    "sPrevious": "Trước",
                    "sNext": "Sau"
                }
            },
            "aoColumnDefs": [
                {
                    "aTargets": [0, 1],
                    "bVisible": false,
                },
                {
                    "aTargets": [1],
                    "render": function (data, type, full, meta) {
                        var content = '<label class="position-relative">' +
                            '<input type="checkbox" class="ace" value="' + data + '"/>' +
                            '<span class="lbl"></span> </label>';
                        return content;
                    },
                    "bSortable": false
                },
                {
                    "aTargets": [7],
                    "render": function (data, type, full, meta) {
                        var content = '<button class="btn btn-minier btn-primary" onclick="LoadSeminarianBySeminarianId(' + data + ')"><i class="ace-icon fa fa-pencil"></i>Sửa</button>' +
                            '<button class="btn btn-minier btn-danger" onclick="DeleteConfirm(' + data + ')">' + '<i class="ace-icon fa fa-trash-o"></i>Xóa</button>';
                        return content;
                    },
                    "bSortable": false,
                    "sWidth": "15%"
                }
            ],
            "bAutoWidth": false,
        });

    }
    function refreshSeminarianTable() {
        updateTableContent("seminarianTable");
    }
    $(document).on('click', 'th input:checkbox', function () {
        var that = this;
        $(this).closest('table').find('tr > td:first-child input:checkbox')
        .each(function () {
            this.checked = that.checked;
            $(this).closest('tr').toggleClass('selected');
        });
    });

    $("#btnCreateSeminarian").click(function () {
        $("#seminarianId").val('');
        var scope = angular.element(document.getElementById('seminarianId')).scope();
        scope.addSeminarian();
        $("#seminarianModalTitle").html("Thêm chủng sinh mới");
        $("#createSeminarianModal").modal('show');
        $("#btnUpdateSeminarianModal").hide();
        $("#btnCreateSeminarianModal").show();
    });

    $("#btnCloseSeminarianModal").click(function () {
        $("#createSeminarianModal").modal('hide');
        clearSeminarian();
    });

    $("#btnCreateSeminarianModal").click(function () {
        AddSeminarian();
    });

    $("#btnUpdateSeminarianModal").click(function () {
        UpdateSeminarian();
    });


    function AddSeminarian() {
        if (!checkValidate()) {
            return;
        }
        var seminarianCode = $("#txtSeminarianCode").val();
        var seminaryName = $("#txtSeminaryName").val();
        var startAt = $("#txtStartAt").val();
        var endAt = $("#txtEndAt").val();
        startLoading();
        $.ajax({
            url: "/Seminarian/AddSeminarian",
            type: "POST",
            data: {
                SeminarianCode: seminarianCode,
                SeminaryName: seminaryName,
                StartAt: new Date(startAt, 1, 1).toISOString(),
                EndAt: new Date(endAt, 1, 1).toISOString()
            },
            success: function (data) {
                if (data.result <= 0) {
                    showMessage("Thêm chủng sinh thất bại", 0);
                } else {
                    showMessage("Thêm chủng sinh thành công", 1);
                    refreshSeminarianTable();
                    $("#createSeminarianModal").modal('hide');
                    clearSeminarian();
                }
            },

        });
    }

    function UpdateSeminarian() {
        if (!checkValidate()) {
            return;
        }
        var seminarianCode = $("#txtSeminarianCode").val();
        var seminaryName = $("#txtSeminaryName").val();
        var startAt = $("#txtStartAt").val();
        var endAt = $("#txtEndAt").val();
        var seminarianId = $("#seminarianId").val();
        startLoading();
        $.ajax({
            url: "/Seminarian/UpdateSeminarian",
            type: "POST",
            data: {
                Id: seminarianId,
                SeminarianCode: seminarianCode,
                SeminaryName: seminaryName,
                StartAt: new Date(startAt, 1, 1).toISOString(),
                EndAt: new Date(endAt, 1, 1).toISOString()
            },
            success: function (data) {
                if (data.result <= 0) {
                    showMessage("Cập nhật thông tin chủng sinh thất bại", 0);
                } else {
                    showMessage("Cập nhật thông tin chủng sinh thành công", 1);
                    refreshSeminarianTable();
                    $("#createSeminarianModal").modal('hide');
                    clearSeminarian();
                }
            },

        });
    }

    function LoadSeminarianBySeminarianId(id) {
        $("#seminarianId").val(id);
        var scope = angular.element(document.getElementById('seminarianId')).scope();
        scope.load(id);
    }

    function getDate(str) {
        if (!str) {
            return null;
        }
        var date = eval('new ' + str.replace(/\//g, ''));
        return date;
    }

    function DeleteConfirm(id) {
        bootbox.dialog({
            closeButton: false,
            message: "Bạn có chắc muốn xóa chủng sinh này không?",
            title: "Xác nhận",
            buttons: {
                danger: {
                    label: " Xóa",
                    className: "ace-icon fa fa-trash-o btn-danger",
                    callback: function () {
                        DeleteSeminarian(id);
                    }
                },
                main: {
                    label: " Đóng",
                    className: "ace-icon fa fa-times btn-default",
                    callback: function () {
                    }
                }
            }
        });
    }

    function DeleteSeminarian(id) {
        $.ajax({
            url: "/Seminarian/DeleteSeminarian",
            type: "POST",
            data: { id: id },
            success: function (data) {

                if (data.result <= 0) {
                    showMessage("Xóa chủng sinh thất bại", 0);
                } else {
                    showMessage("Xóa chủng sinh thành công", 1);
                    refreshSeminarianTable();
                }

            },
        });
    }

    $('.date-picker').datepicker({
        minViewMode: 'years',
        autoclose: true,
        todayHighlight: true,
        forceParse: false
    });

    $(".date-picker").focusout(function () {
        var code = isDate($(this).val());

        if (code == -1) {
            showMessage("Thời gian không đúng định dạng (ngày/tháng/năm)", 0, 6000);
            $(this).focus();
        }
        else if (code == -2) {
            showMessage("Thời gian không hợp lệ", 0, 6000);
            $(this).focus();
        }
    });

    function checkValidate() {

        var seminarianCode = $("#txtSeminarianCode").val();
        var seminaryName = $("#txtSeminaryName").val();
        var startAt = $("#txtStartAt").val();
        var endAt = $("#txtEndAt").val();
        var isError = false;

        if (!seminarianCode) {
            $("#lbErrorSeminarianCode").html("Vui lòng nhập mã chủng sinh");
            $("#lbErrorSeminarianCode").show();
            isError = true;
        } else {
            $("#lbErrorSeminarianCode").hide();
            $("#lbErrorSeminarianCode").html("");
        }

        if (!seminaryName) {
            $("#lbErrorSeminaryName").html("Vui lòng nhập tên chủng viện");
            $("#lbErrorSeminaryName").show();
            isError = true;
        } else {
            $("#lbErrorSeminaryName").hide();
            $("#lbErrorSeminaryName").html("");
        }

        if (!startAt) {
            $("#lbErrorStartAt").html("Vui lòng nhập năm bắt đầu");
            $("#lbErrorStartAt").show();
            isError = true;
        } else {
            $("#lbErrorStartAt").hide();
            $("#lbErrorStartAt").html("");
        }

        if (!endAt) {
            $("#lbErrorEndAt").html("Vui lòng nhập năm kết thúc");
            $("#lbErrorEndAt").show();
            isError = true;
        } else {
            $("#lbErrorEndAt").hide();
            $("#lbErrorEndAt").html("");
        }

        if (startAt && endAt) {
            if (parseInt(startAt) > parseInt(endAt)) {
                isError = true;
                $("#lbErrorStartAt").html("Năm bắt đầu phải nhỏ hơn hoặc bằng năm kết thúc");
                $("#lbErrorStartAt").show();
            }
        }

        if (isError) {
            return false;
        }
        return true;

    }

    function clearSeminarian() {
        $("#seminarianId").val('');
        var scope = angular.element(document.getElementById('seminarianId')).scope();
        scope.clearSeminarian();
        $("#txtSeminarianCode").val("");
        $("#lbErrorSeminarianCode").val("");
        $("#lbErrorSeminarianCode").hide();

        $("#txtSeminaryName").val("");
        $("#lbErrorSeminaryName").val("");
        $("#lbErrorSeminaryName").hide();

        $("#txtStartAt").val("");
        $("#lbErrorStartAt").val("");
        $("#lbErrorStartAt").hide();

        $("#txtEndAt").val("");
        $("#lbErrorEndAt").val("");
        $("#lbErrorEndAt").hide();
    }

</script>

@section Scripts
{
    <script src="~/Scripts/angular.min.js"></script>
    <script src="~/Scripts/ui-bootstrap-tpls-1.3.1.min.js"></script>
    <script type="text/javascript">
        var myApp = angular.module('myApp', ['ui.bootstrap']);

        myApp.directive('datepicker', ['$filter', function ($filter) {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function (scope, element, attrs, ngModel) {
                    var baseOptions = {
                        autoclose: true,
                        todayHighlight: true,
                        forceParse: false,
                        format: "dd/MM/yyyy"
                    }
                    var options = attrs.datepickerOptions;
                    if (options) {
                        options = scope.$eval(options);
                        for (var key in options) {
                            baseOptions[key] = options[key];
                        }
                    }

                    if (ngModel) {
                        ngModel.$parsers.unshift(function (data) {
                            //convert data from view format to model format
                            data = $(element).datepicker('getDate');
                            return data; //converted
                        });

                        ngModel.$render = function () {
                            $(element).datepicker('setDate', new Date(ngModel.$viewValue));
                        };
                    }

                    element.datepicker(baseOptions)
                        .on('changeDate', function () {
                            ngModel.$viewValue = element.datepicker('getDate');
                            ngModel.$modelValue = ngModel.$viewValue;
                            ngModel.$commitViewValue();
                        });
                }
            }
        }])

        myApp.controller('SeminarianController', ['$scope', '$http', function ($scope, $http) {
            $scope.isEdit = false;
            $scope.seminaryYearDatePickerOptions = {
                format: 'yyyy',
                minViewMode: 'years'
            }

            $scope.seminaryYears = [];

            $http.get('/Seminary/GetAllSeminaryYears')
                .success(function (data) {
                    $scope.seminaryYears = data.map(function (s) {
                        s.StartAt = getDate(s.StartAt);
                        s.EndAt = getDate(s.EndAt);
                        s.Display = s.SeminaryName + ' khóa ' + s.SeminaryYearCode + ' ' + s.StartAt.getFullYear() + ' - ' + s.EndAt.getFullYear();
                        return s;
                    });
                })

            $scope.seminarian = { NewSeminaryYear: {} };
            $scope.load = function (id) {
                $scope.isEdit = true;
                $http.get('/Seminarian/LoadSeminarianById/' + id)
                    .success(function (data) {
                        data = data.result;
                        data.Date2 = getDate(data.Date2);
                        data.Date7 = getDate(data.Date7);
                        data.Date8 = getDate(data.Date8);
                        data.Parishioner.Display = data.Parishioner.ChristianName + ' ' + data.Parishioner.Name;
                        data.Parishioner.BirthDate = getDate(data.Parishioner.BirthDate);
                        $scope.seminarian = data;

                        $("#createSeminarianModal").modal('show');
                    })
                $scope.$apply();
            }

            $scope.actualStartError = '';

            $scope.addNewSeminaryYear = function () {
                if ($scope.seminarian.NewSeminaryYear.ActualStart.getFullYear() > $scope.seminarian.NewSeminaryYear.ActualEnd.getFullYear()) {
                    $scope.actualStartError = 'Năm bắt đầu phải nhỏ hơn hoặc bằng năm kết thúc';
                }

                if (!$scope.seminarian.VocationSeminaryYears) {
                    $scope.seminarian.VocationSeminaryYears = [];
                }

                $scope.seminarian.VocationSeminaryYears.push({
                    ActualEnd: $scope.seminarian.NewSeminaryYear.ActualEnd,
                    ActualStart: $scope.seminarian.NewSeminaryYear.ActualStart,
                    SeminaryYear:
                    {
                        EndAt: $scope.seminarian.NewSeminaryYear.SeminaryYear.EndAt,
                        Id: $scope.seminarian.NewSeminaryYear.SeminaryYear.Id,
                        SeminaryName: $scope.seminarian.NewSeminaryYear.SeminaryYear.SeminaryName,
                        SeminaryYearCode: $scope.seminarian.NewSeminaryYear.SeminaryYear.SeminaryYearCode,
                        StartAt: $scope.seminarian.NewSeminaryYear.SeminaryYear.StartAt
                    },
                    SeminaryYearId: $scope.seminarian.NewSeminaryYear.SeminaryYear.Id,
                    Status: $scope.seminarian.NewSeminaryYear.Status
                });
                $scope.seminarian.NewSeminaryYear = {};
            }

            $scope.addSeminarian = function () {
                $scope.isEdit = false;
                $scope.clearSeminarian();
                $scope.$apply();
            }

            $scope.clearSeminarian = function () {
                $scope.seminarian = { NewSeminaryYear: {} };
            };

            $scope.getParishioners = function (value) {
                return $http.get('/Parishioner/SearchParishionersForAddSeminarian', {
                    params: {
                        keyword: value,
                        start: 0,
                        length: 10
                    }
                }).then(function (response) {
                    return response.data.Result.map(function (p) {
                        p.Display = p.ChristianName + ' ' + p.Name;
                        p.BirthDate = getDate(p.BirthDate);
                        return p;
                    });
                });
            }

            $scope.changeSeminaryYear = function (model) {
                model.ActualStart = model.SeminaryYear.StartAt;
                model.ActualEnd = model.SeminaryYear.EndAt;
                model.Status = typeof model.Status != 'undefined' ? model.Status : '0';
            }

            $scope.createSeminarian = function () {
                console.log($scope.seminarian)
            }

            $scope.updateSeminarian = function () {
                console.log($scope.seminarian)
            }

            $scope.closeSeminarianModal = function () {
                $scope.clearSeminarian();
                $("#createSeminarianModal").modal('hide');
            }
        }]);

        //bootstrap angular app
        angular.element(document).ready(function () {
            angular.bootstrap(document, ['myApp']);
        });
    </script>
}
