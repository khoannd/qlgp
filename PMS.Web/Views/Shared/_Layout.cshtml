@using PMS.DataAccess.Enumerations;
@using PMS.BusinessLogic;
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản lý giáo phận</title>

    <!-- CSS -->
    <link rel="stylesheet" href="/Content/assets/css/jquery-ui.custom.min.css" />
    <link rel="stylesheet" href="/Content/assets/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/Content/font-awesome.min.css" />
    <link rel="stylesheet" href="/Content/assets/css/ace.min.css" id="main-ace-style" />
    <link rel="stylesheet" href="/Content/assets/css/ace-skins.min.css" />
    <link rel="stylesheet" href="/Content/assets/css/ace-rtl.min.css" />
    <link rel="stylesheet" href="/Content/assets/css/datepicker.css" />
    <link rel="stylesheet" href="/Content/assets/css/jquery-ui.min.css" />
    <link rel="stylesheet" href="/Content/assets/css/jquery.gritter.css" />
    <link rel="stylesheet" href="/Content/Site.css" />

    <!-- Javascript -->
    <script src="/Content/jquery.min.js"></script>
    <script src="/Content/assets/js/ace-extra.min.js"></script>
    <script src="/Content/bootstrap.min.js"></script>
    <script src="/Content/assets/js/jquery-ui.min.js"></script>
    <script src="/Content/assets/js/jquery-ui.custom.min.js"></script>
    <script src="/Content/assets/js/jquery.ui.touch-punch.min.js"></script>
    <script src="/Content/assets/js/date-time/bootstrap-datepicker.min.js"></script>
    <script src="/Content/assets/js/jquery.maskedinput.min.js"></script>
    <script src="/Content/assets/js/jquery.dataTables.min.js"></script>
    <script src="/Content/assets/js/jquery.dataTables.bootstrap.js"></script>
    <script src="/Content/assets/js/jquery.gritter.min.js"></script>
    <script src="/Content/assets/js/ace-elements.min.js"></script>
    <script src="/Content/assets/js/ace.min.js"></script>
    <script src="/Content/assets/js/bootbox.min.js"></script>
    <script src="/Scripts/pms_common.js"></script>
    <script src="~/Content/assets/js/date-time/bootstrap-datetimepicker.min.js"></script>
    <script src="~/Content/assets/js/date-time/bootstrap-timepicker.min.js"></script>
    <script src="~/Content/assets/js/date-time/jquery.timepicker.js"></script>
    <script src="~/Content/assets/js/date-time/jquery.timepicker.min.js"></script>
    <script src="/Content/assets/js/bootstrap-wysiwyg.min.js"></script>
    <script src="/Content/assets/js/jquery.hotkeys.min.js"></script>
</head>

@{
    int roleId = 0;

    if (Session["RoleId"] != null)
    {
        roleId = (int)Session["RoleId"];
    }
}

<body class="no-skin">
    <style>
        * {
            font-family: "Open Sans","Helvetica Neue",Helvetica,Arial,sans-serif;
        }

        .ui-autocomplete {
            z-index: 1151 !important;
        }

        .ui-state-focus {
            background: #f2f2f2;
        }

        .datepicker {
            z-index: 1151 !important;
        }

        .bootbox {
            z-index: 1060 !important;
        }

        #loading, #createParishionerLoading,
        #lookupParishionerLoading, #createDivisionModalLoading,
        #addMatrimonyModalLoading, #viewReadonlyParishionerLoading, #parishionerInformationModalLoading {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            top: 0;
            opacity: 0.8;
            background-color: #000;
            color: #fff;
            z-index: 9999;
        }

        #readonlySocietiesSearch {
            z-index: 1080 !important;
        }

        #readonlyClassesSearch {
            z-index: 1079 !important;
        }

        #readonlyMatrimonyModal {
            z-index: 1078 !important;
        }

        #viewReadonlyParishionerModal {
            z-index: 1077 !important;
        }

        #viewReadonlyParishionerLoading {
            z-index: 1076 !important;
        }

        #createDivisionModal {
            z-index: 1062 !important;
        }

        #createDivisionModalLoading {
            z-index: 1061 !important;
        }

        #chooseParishionerModal {
            z-index: 1060 !important;
        }

        #lookupParishionerLoading {
            z-index: 1059 !important;
        }

        #createParishionerModal {
            z-index: 1058 !important;
        }

        #createParishionerLoading {
            z-index: 1057 !important;
        }

        #parishionerInformationModal {
            z-index: 1056 !important;
        }

        #parishionerInformationModalLoading {
            z-index: 1055 !important;
        }


        #addMatrimonyModal {
            z-index: 1052 !important;
        }

        #addMatrimonyModalLoading {
            z-index: 1051 !important;
        }

        #btn1 {
            background-color: #4CAF50;
            border: none;
            color: white;
            padding: 6px 8px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 14px;
        }

        #btn1 {
            border-radius: 4px;
        }
    </style>
    <div id="loading">
        <img src="/Content/loading.gif" style="position: fixed; top: 40%; left: 44%;" />
    </div>

    <div id="createParishionerLoading" style="display: none">
    </div>

    <div id="lookupParishionerLoading" style="display: none">
    </div>

    <div id="createDivisionModalLoading" style="display: none">
    </div>

    <div id="parishionerInformationModalLoading" style="display: none">
    </div>

    <div id="viewReadonlyParishionerLoading" style="display: none">
    </div>

    <div id="addMatrimonyModalLoading" style="display: none">
    </div>



    <input type="hidden" id="hiddenRoleId" value="@roleId" />
    <input type="hidden" id="hiddenAdminPosition" value="@((int)AccountEnum.Admin)" />
    <input type="hidden" id="hiddenManagerPosition" value="@((int)AccountEnum.Manager)" />

    <div id="navbar" class="navbar navbar-default navbar-collapse h-navbar">
        <script type="text/javascript">
            try {
                ace.settings.check('navbar', 'fixed');
            } catch (e) { }
        </script>

        <div class="navbar-container" id="navbar-container">
            <div class="navbar-header pull-left">
                <a href="#" class="navbar-brand" style="padding: 2px 0">
                    <img class="img-responsive" src="/Images/Logo/logowhite.png" style="max-height: 41px" />
                </a>
            </div>
            <div class="navbar-buttons navbar-header pull-right  collapse navbar-collapse" role="navigation">

                <ul class="nav ace-nav">


                    @if (roleId == (int)AccountEnum.Manager || roleId == (int)AccountEnum.Admin)
                    {
                        <li class="light-grey">
                            <div class="input-group" style="padding: 5px">
                                <input type="text" class="form-control" placeholder="Nhập tên giáo dân" title="Tìm kiếm giáo dân" id="txtSearchBar" />
                                <span class="input-group-btn" style="width: 0">
                                    <button type="button" class="btn btn-light form-control" id="btnSearchBar">
                                        <i class="ace-icon fa fa-search icon-on-right bigger-110"></i>
                                    </button>
                                </span>
                            </div>
                        </li>
                    }


                    @if (roleId == (int)AccountEnum.Manager)
                    {
                        <li class="green" title="Thông tin chuyển xứ cho gia đình chờ duyệt">
                            <a class="dropdown-toggle" href="/ApproveRequest/ViewFamilyRequest">
                                <i class="ace-icon fa fa-home"></i>
                                <span class="" id="numberOfFamilySendingRequest"></span>
                            </a>
                        </li>
                        <li class="green" title="Thông tin chuyển xứ cho giáo dân chờ duyệt">
                            <a class="dropdown-toggle" href="/ApproveRequest/ViewParishionerRequest">
                                <i class="ace-icon fa fa-user"></i>
                                <span class="" id="numberOfSendingRequest"></span>
                            </a>
                        </li>
                        <li class="light-grey" title="Thông tin chuyển xứ cho gia đình đã nhận">
                            <a class="dropdown-toggle" href="/ApproveRequest/Family">
                                <i class="ace-icon fa fa-home"></i>
                                <span class="" id="numberOfFamilyRequest"></span>
                            </a>
                        </li>

                        <li class="light-grey" title="Thông tin chuyển xứ cho giáo dân đã nhận">
                            <a class=" dropdown-toggle" href="/ApproveRequest/Parishioner">
                                <i class="ace-icon fa fa-user"></i>
                                <span class="" id="numberOfRequest"></span>
                            </a>
                        </li>

                    }
                    @if (roleId == (int)AccountEnum.Manager || roleId == (int)AccountEnum.Admin)
                    {
                        <li class="light-grey" title="Hộp thư">
                            <a class="dropdown-toggle" href="/Message/CreateMessage">
                                <i class="ace-icon fa fa-envelope"></i>
                                <span class="" id="numberOfMessage">0</span>
                            </a>
                        </li>
                    }
                    <li class="user-min" style="background-color: #1bb7a0">
                        <a data-toggle="dropdown" href="#" class="dropdown-toggle">
                            <img class="nav-user-photo" src="/Content/assets/avatars/avatar2.png" />

                            Chào mừng,
                            @Session["Name"]

                            <i class="ace-icon fa fa-caret-down"></i>
                        </a>

                        <ul class="user-menu dropdown-menu-right dropdown-menu dropdown-yellow dropdown-caret dropdown-close" style="padding-top: 12px !important;">
                            <li>
                                <a href="/Account/ChangePassword">
                                    <i class="ace-icon fa fa-cog"></i>
                                    Đổi mật khẩu
                                </a>
                            </li>

                            <li class="divider"></li>

                            <li>
                                <a href="/Account/Logout">
                                    <i class="ace-icon fa fa-power-off"></i>
                                    Đăng xuất
                                </a>
                            </li>
                        </ul>
                    </li>

                </ul>

            </div>

        </div><!-- /.navbar-container -->
    </div>

    <div class="main-container" id="main-container">
        <script type="text/javascript">
            try {
                ace.settings.check('main-container', 'fixed');
            } catch (e) { }
        </script>

        <div id="sidebar" class="sidebar h-sidebar navbar-collapse collapse">
            <script type="text/javascript">
                try {
                    ace.settings.check('sidebar', 'fixed');
                } catch (e) { }
            </script>

            @{ 
                var menu = new MenuBusiness(DbConfig.GetConnectionString());
                ViewContext.Writer.Write(menu.RenderMenu(roleId));
            }


            <div class="sidebar-toggle sidebar-collapse" id="sidebar-collapse">
                <i class="ace-icon fa fa-angle-double-left" data-icon1="ace-icon fa fa-angle-double-left" data-icon2="ace-icon fa fa-angle-double-right"></i>
            </div>

            <script type="text/javascript">
                try {
                    ace.settings.check('sidebar', 'collapsed');
                } catch (e) { }
            </script>
        </div>

        <div class="main-content">
            <div class="page-content">

                @if (roleId != (int)AccountEnum.Teacher)
                {
                    <div class="ace-settings-container" id="ace-settings-container">
                        <div class="btn btn-app btn-xs btn-primary ace-settings-btn" id="ace-settings-btn">
                            <i class="ace-icon fa fa-cog bigger-150"></i>
                        </div>

                        <div class="ace-settings-box clearfix" id="ace-settings-box">
                            <div class="pull-left width-50">
                                <div class="ace-settings-item">
                                    <div class="pull-left">
                                        <select id="skin-colorpicker" class="hide">
                                            <option data-skin="no-skin" value="#438EB9">#438EB9</option>
                                            <option data-skin="skin-1" value="#222A2D">#222A2D</option>
                                            <option data-skin="skin-2" value="#C6487E">#C6487E</option>
                                            <option data-skin="skin-3" value="#D0D0D0">#D0D0D0</option>
                                        </select>
                                    </div>
                                    <span>&nbsp; Chọn màu</span>
                                </div>

                                <div class="ace-settings-item">
                                    <input type="checkbox" class="ace ace-checkbox-2" id="ace-settings-sidebar" />
                                    <label class="lbl" for="ace-settings-sidebar"> Cố định thanh menu</label>
                                </div>
                            </div><!-- /.pull-left -->


                        </div><!-- /.ace-settings-box -->

                    </div><!-- /.ace-settings-container -->
                }
                @RenderBody()


            </div><!-- /.page-content -->

        </div><!-- /.main-content -->
        <div class="clearfix"></div>
        <div class="space-20"></div>
        <div class="footer">
            <div class="footer-inner">
                <div class="footer-content">
                    <span class="bigger-120">
                        <span class="blue bolder">QLGP - </span>
                        <span class="text-muted">Quản lý Giáo Phận</span>
                    </span>
                    <div class="text-muted center"><h6><i class="fa fa-graduation-cap"></i> FPT University</h6></div>
                </div>
            </div>
        </div>

        <a href="#" id="btn-scroll-up" class="btn-scroll-up btn btn-sm btn-inverse">
            <i class="ace-icon fa fa-angle-double-up icon-only bigger-110"></i>
        </a>
    </div><!-- /.main-container -->
    <!-- /.main-container -->

    <script type="text/javascript">
        // if ('ontouchstart' in document.documentElement) document.write("<script src='/Content/assets/js/jquery.mobile.custom.min.js'>" + "<" + "/script>");
        jQuery(function ($) {
            $('.date-picker').datepicker({
                autoclose: true,
                todayHighlight: true,
                forceParse: false,
                endDate: '+0d',
            }).next().on(ace.click_event, function () {
                $(this).prev().focus();
            });
        });

        $(".date-picker").focusout(function () {
            if ($(this).val() != "" && $(this).val() != "__/__/____") {
                var code = isDate($(this).val());

                if (code == -1) {
                    showMessage("Thời gian không đúng định dạng, định dạng: ngày/tháng/năm hoặc tháng/năm hoặc năm, " + $(this).val(), -1);
                    $(this).focus();
                }
                else if (code == -2) {
                    showMessage("Thời gian không hợp lệ", -1);
                    $(this).focus();
                }

                var date = convertDateToString($(this).val());
                var now = new Date();
                var month = now.getMonth() + 1;
                var dateString = now.getDate() + "/" + month + "/" + now.getFullYear();
                var date2 = convertDateToString(dateString);

                var time = parseInt(date2) - parseInt(date);
                if (!$(this).hasClass('future-datepicker')) {
                    if (time < 0) {
                        showMessage("Không thể nhập thời gian của tương lai", -1);
                        $(this).focus();
                    }
                }
            }
        });

        $(".fdate-picker").focusout(function () {
            if ($(this).val() != "" && $(this).val() != "__/__/____") {
                var code = isDate($(this).val());

                if (code == -1) {
                    showMessage("Thời gian không đúng định dạng, định dạng: ngày/tháng/năm hoặc tháng/năm hoặc năm, " + $(this).val(), -1);
                    $(this).focus();
                }
                else if (code == -2) {
                    showMessage("Thời gian không hợp lệ", -1);
                    $(this).focus();
                }
            }
        });

        $(document).ready(function () {
            $.ajaxSetup({
                //beforeSend: function(xhr) {
                //    $("#loading").fadeIn();
                //},
                complete: function (xhr) {
                    $("#loading").fadeOut();
                }
            });
        });

        $(document).ready(function () {
            $("#loading").fadeOut();
        });

        activeLayout();
        function activeLayout() {
            var pathName = window.location.pathname;

            if (pathName == "/Sacrament/Index") {
                var fullPath = window.location.href;
                var origin = window.location.origin;
                pathName = fullPath.replace(origin, "");
            }
            pathName = pathName.replace("#", "");
            var links = $("#nav").find("a");

            for (var i = 0; i < links.length; i++) {

                var href = links[i].getAttribute("href");

                if (href == pathName) {
                    $(links[i]).closest("li").addClass("active");

                    //kiem tra cha no co phai submenu
                    var parent = $(links[i]).closest("li").closest("ul");
                    if ($(parent).hasClass("submenu")) {
                        $(parent).closest("li").addClass("open active");
                    }
                    break;
                }
            }
        }

        var hiddenRoleId = $("#hiddenRoleId").val();
        var hiddenPosition = $("#hiddenAdminPosition").val();
        var hiddenManagerPosition = $("#hiddenManagerPosition").val();
        if (hiddenRoleId == hiddenPosition) {
            countMessageByDioceseId();
            setInterval(function () {

                countMessageByDioceseId();
                //countParishionerMigrationRequestSending();
                //countFamilyMigrationRequest();
                //countFamilyMigrationSendingRequest();
            }, 900000);
        }

        if (hiddenRoleId == hiddenManagerPosition) {
            countMigrationRequest();
            countMessageByParishId();
            setInterval(function () {

                countMigrationRequest();
                countMessageByParishId();
                //countParishionerMigrationRequestSending();
                //countFamilyMigrationRequest();
                //countFamilyMigrationSendingRequest();
            }, 900000);
        }

        //50000
        function countMigrationRequest() {

            $.ajax({
                url: "/ApproveRequest/CountAllMigrateRequest",
                data: {

                },
                success: function (data) {
                    var element = $("#numberOfRequest");
                    //append data
                    element.html("");

                    if (data.parishionerReceiving > 0) {
                        $("#numberOfRequest").attr('class', 'badge badge-danger');
                        element.append(data.parishionerReceiving);
                    } else {
                        $("#numberOfRequest").attr('class', '');
                    }

                    var elementSendingRequest = $("#numberOfSendingRequest");
                    //append data
                    elementSendingRequest.html("");

                    if (data.parishionerSending > 0) {
                        $("#numberOfSendingRequest").attr('class', 'badge badge-danger');
                        elementSendingRequest.append(data.parishionerSending);
                    } else {
                        $("#numberOfSendingRequest").attr('class', '');
                    }

                    var elementFamily = $("#numberOfFamilyRequest");
                    //append data
                    elementFamily.html("");

                    if (data.familyReceiving > 0) {
                        $("#numberOfFamilyRequest").attr('class', 'badge badge-danger');
                        elementFamily.append(data.familyReceiving);
                    } else {
                        $("#numberOfFamilyRequest").attr('class', '');
                    }

                    var elementFamilySendingRequest = $("#numberOfFamilySendingRequest");
                    //append data
                    elementFamilySendingRequest.html("");

                    if (data.familySending > 0) {
                        $("#numberOfFamilySendingRequest").attr('class', 'badge badge-danger');
                        elementFamilySendingRequest.append(data.familySending);
                    } else {
                        $("#numberOfFamilySendingRequest").attr('class', '');
                    }
                }
            });
        }

        function countMessageByParishId() {
            $.ajax({
                url: "/Message/CountMessageByParishId",
                data: {

                },
                success: function (data) {
                    var element = $("#numberOfMessage");
                    //append data
                    element.html("");

                    if (data > 0) {
                        $("#numberOfMessage").attr('class', 'badge badge-danger');
                        element.append(data);
                    } else {
                        $("#numberOfMessage").attr('class', '');
                    }

                }
            });
        }

        function countMessageByDioceseId() {
            $.ajax({
                url: "/Message/CountMessageByDioceseId",
                data: {

                },
                success: function (data) {
                    var element = $("#numberOfMessage");
                    //append data
                    element.html("");
                    element.append(data);
                    if (data > 0) {
                        $("#numberOfMessage").attr('class', 'badge badge-danger');
                    } else {
                        $("#numberOfMessage").attr('class', '');
                    }

                }
            });
        }

        $(".place").autocomplete({
            autoFocus: true,
            source: function (request, response) {
                $.ajax({
                    url: "/Parishioner/LoadPlaces",
                    dataType: "json",
                    data: {
                        name: request.term
                    },
                    success: function (data) {
                        response(data.result);
                    }
                });
            },
            minLength: 1
        });

        $(".parishName").autocomplete({
            autoFocus: true,
            source: function (request, response) {
                $.ajax({
                    url: "/Parishioner/LoadParishNames",
                    dataType: "json",
                    data: {
                        name: request.term
                    },
                    success: function (data) {
                        response(data.result);
                    }
                });
            },
            minLength: 1
        });

        //countInboxMessage();

        //function countInboxMessage() {
        //    $.ajax({
        //        url: "/ApproveRequest/CountParishionerMigrationRequestSendingByParishId",
        //        data: {

        //        },
        //        success: function (data) {
        //            var element = $("#numberOfSendingRequest");
        //            //append data
        //            element.html("");
        //            element.append(data);
        //            if (data > 0) {
        //                $("#numberOfSendingRequest").attr('class', 'badge badge-danger icon-animated-vertical');
        //            } else {
        //                $("#numberOfSendingRequest").attr('class', '');
        //            }
        //        }
        //    });
        //}

        // sidebar-fixed
        $("#ace-settings-sidebar").change(function () {
            if ($(this).is(':checked')) {
                localStorage.setItem("menuFix", "fix");
            } else {
                localStorage.setItem("menuFix", "");
            }
        });

        var local = localStorage.getItem("menuFix");
        if (local) {
            $("#sidebar").addClass("sidebar-fixed");
            $("#ace-settings-sidebar").prop("checked", true);
        }
        var skin = localStorage.getItem("skin", skin);
        if (skin) {
            $('body').removeClass('no-skin');
            $('body').addClass(skin);
            var code = localStorage.getItem("code", code);
            if (code) {
                $("#skin-colorpicker").val(code);
            }
        }

        $("#skin-colorpicker").change(function () {
            var el = $(this).find('option:selected');
            var skin = el.data('skin');
            var code = el.val();
            localStorage.setItem("skin", skin);
            localStorage.setItem("code", code);
        });

        $("input:text").prop("maxlength", 100);
        $("input:password").prop("maxlength", 50);

        //--------------------------------------------
        //Search bar

        //var searchName = localStorage.getItem("parishionerName");
        //$("#txtParishionerName").val(searchName);
        $("#btnSearchBar").click(function () {
            var parishionerName = $("#txtSearchBar").val();
            if (parishionerName != "") {
                localStorage.setItem("parishionerName", parishionerName);
                window.location = "/Search/Parishioner";
            } else {
                showMessage("Vui lòng nhập tên giáo dân để tìm kiếm", -1);
            }

        });

        $(".autocomplete-priest").each(function () {
            initPriestAutocomplete(this, false);
        });
        function initPriestAutocomplete(element, isForce) {

            var input = $(element).autocomplete({
                autoFocus: !isForce,
                source: function (request, response) {
                    $.ajax({
                        url: "/Parishioner/LoadPriestNames",
                        dataType: "json",
                        data: {
                            name: request.term
                        },
                        success: function (data) {
                            response(data.result);
                        }
                    });
                },
                focus: function (event, ui) {
                    //  $(element).data("uiItem", ui.item.value);
                    if (isForce) {
                        $(element).val(ui.item.value);
                        return false;
                    }
                },
                select: function (event, ui) {
                    if (isForce) {
                        $(this).data("uiItem", ui.item.value);
                        $(element).val(ui.item.value);
                        return false;
                    }
                },
                minLength: 1
            });

            if (isForce) {
                input.bind("blur", function () {

                    var current = $(this).val();
                    if (current) {
                        $(this).val($(this).data("uiItem"));
                    }

                }).data("uiItem", $(element).val());
            }

        }
    </script>
    @RenderSection("Scripts", false)
</body>
</html>
